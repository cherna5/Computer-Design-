{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red14\green14\blue14;
\red23\green96\blue147;\red47\green102\blue178;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;\cssrgb\c6667\c6667\c6667;
\cssrgb\c9412\c45490\c64314;\cssrgb\c23529\c48627\c75294;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl325\sa200\partightenfactor0

\f0\b\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Prelab:
\b0 \uc0\u8232 \u8232 Set up a push button switch and LED with the Arduino.\u8232 When the push button is pressed the Arduino\'a0should read in the value from the switch, and then toggle the LED.\u8232 (if the LED is on, it goes off; if the LED is off it goes on).
\f1\fs20 \cf4 \strokec4 \
\pard\pardeftab720\sl240\sa200\partightenfactor0
\cf4 A very simple pushbutton example is here:\'a0{\field{\*\fldinst{HYPERLINK "https://www.arduino.cc/en/Tutorial/Button"}}{\fldrslt 
\fs26 \cf5 \ul \ulc5 \strokec5 https://www.arduino.cc/en/Tutorial/Button}}\
\pard\pardeftab720\sl325\sa200\partightenfactor0

\f0\fs26 \cf2 \strokec2 A helpful resource is\'a0arduino\'a0lesson 5:\'a0{\field{\*\fldinst{HYPERLINK "http://www.ladyada.net/learn/arduino/lesson5.html"}}{\fldrslt \cf6 \strokec6 http://www.ladyada.net/learn/arduino/lesson5.html}}
\f1\fs20 \cf4 \strokec4 \
\pard\pardeftab720\sl240\sa200\partightenfactor0
\cf4 Using the serial monitor to read print statements from your\'a0
\fs26 Arduino
\fs20 \'a0can be very helpful here.\
\pard\pardeftab720\sl325\sa200\partightenfactor0

\f0\fs26 \cf2 \strokec2 \uc0\u8232 
\b Lab:
\b0 \uc0\u8232 \u8232 Use two switches and three LEDs for this circuit. One switch will increment a 3-bit count, and the other switch should decrement the 3-bit count. \u8232 The 3-bit count will be displayed on the three LEDs in binary (a 1 is LED on). \'a0
\f1\fs20 \cf4 \strokec4 \

\f0\fs26 \cf2 \strokec2 You should write code to keep track of the number of button presses and algorithmically convert that number to a binary output. \'a0Your code should NOT just be implementing a giant lookup table to translate to binary, and solutions which do so will not receive credit.
\f1 \cb1 \uc0\u8232 
\fs20 \cf4 \cb3 \strokec4 \

\f0\fs26 \cf2 \strokec2 Your lights should increment (or decrement) by one each time the switch is pressed. If we continually depress the switch, the lights should not run up (or down) to 7 (or 0) (i.e. it should only change the value once per button press).\uc0\u8232 
\f1\fs20 \cf4 \strokec4 \

\f0\fs26 \cf2 \strokec2 Also document what happens when you reach 7 and/or 0.
\f1\fs20 \cf4 \strokec4 \
\pard\pardeftab720\sl300\sa200\partightenfactor0

\b\fs26 \cf4 Academic Integrity Guidelines:\'a0
\b0\fs20 You may use any resources linked from this lab, or posted by the professor or TAs on blackboard. \'a0You should not look at any other internet\'a0resources for this. \'a0This is an individual assignment, and should be completed on your own. \'a0You should not show anyone your code, or look at anyone else's code. \'a0You are responsible for writing the code to convert to binary and light up the proper LEDs on your own.\
}